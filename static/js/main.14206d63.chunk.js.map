{"version":3,"sources":["movies/components/SearchCard.module.scss","movies/components/Card.module.scss","movies/index.module.scss","movies/components/SearchGuide.module.scss","movies/components/Toggle.module.scss","movies/components/MovieList.module.scss","movies/components/SearchInput.module.scss","movies/components/Icon.module.scss","movies/components/Toolbar.module.scss","movies/List.module.scss","movies/Search.module.scss","store/ui/types.ts","store/pagination/actions.ts","store/entities/reducers.ts","store/pagination/reducers.ts","store/ui/actions.ts","store/ui/reducers.ts","store/rootReducer.ts","store/pagination/epics.ts","store/rootEpic.ts","store/pagination/fetchMoviesUrlMiddleware.ts","store/configureStore.ts","movies/components/Toolbar.tsx","movies/components/Icon.tsx","movies/components/Toggle.tsx","movies/components/MovieList.tsx","config/TmdbConfigContext.ts","movies/components/Card.tsx","store/pagination/selector.ts","movies/List.tsx","movies/components/SearchInput.tsx","movies/components/SearchGuide.tsx","movies/components/SearchCard.tsx","movies/Search.tsx","movies/index.tsx","App.tsx","index.tsx"],"names":["module","exports","MovieType","getFetchPaginationStartType","type","getFetchPaginationSuccessType","getFetchPaginationFailureType","getResetType","getFetchPaginationCancellationType","fetchPaginationStart","page","movieType","queryPaginationStart","query","searchMovie","name","entities","combineReducers","movies","state","action","payload","pagination","popular","createPagination","nowPlaying","upcoming","topRated","initialState","ids","loading","concat","result","setSearchLinkVisible","visible","searchLinkVisible","setCloseLinkVisible","closeLinkVisible","selectedMovieType","ui","selectedType","rootReducer","movieSchema","results","schema","Entity","fetchMovies","action$","pipe","filter","mergeMap","ajax","url","map","res","resolvedData","normalize","response","totalPages","total_pages","totalResults","total_results","takeUntil","catchError","of","rootEpic","store$","dependencies","combineEpics","error","source","console","urls","fetchMoviesUrlMiddleware","next","encodeURIComponent","epicMiddleware","createEpicMiddleware","Toolbar","children","className","classNames","styles","root","src","height","alt","CloseIcon","icon","xmlns","width","viewBox","d","fill","SearchIcon","Icon","toggleMap","label","link","Toggle","Object","values","toggleItem","to","item","activeClassName","active","key","MovieList","list","hasMore","onNext","singleColumn","scrollThreshold","dataLength","length","loader","movie","id","TmdbConfigContext","React","createContext","Card","config","useContext","rate","high","vote_average","post","getPosterPath","title","CardWithMemo","memo","imageBaseUrl","posterSize","poster_path","getSelectedTypeMovies","createSelector","movieEntity","hasMoreMovies","List","useSelector","selectedMovies","dispatch","useDispatch","useEffect","handleScroll","useCallback","toggle","SearchInput","onInput","handleInput","event","target","value","wrapper","stroke","strokeWidth","cx","cy","r","input","placeholder","SearchGuide","arrow","role","aria-label","large","small","SearchCard","detail","vote","hign","release_date","SearchCardWithMemo","Search","inputSubject","useMemo","Subject","useState","guideVisible","showGuide","queryRef","useRef","reset","resetPagination","search","current","subscription","asObservable","tap","v","debounceTime","distinctUntilChanged","subscribe","val","unsubscribe","complete","Home","match","toolbar","spacer","path","App","component","Movies","exact","store","preloadedState","middlewares","middlewareEnhancer","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","run","configureStore","ReactDOM","render","Provider","apiEndPoint","backdropSize","logoSize","profileSize","stillSize","apiKey","document","getElementById"],"mappings":"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","file":"static/js/main.14206d63.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SearchCard_root__59aaQ\",\"post\":\"SearchCard_post__3q3kl\",\"detail\":\"SearchCard_detail__1Gi2Z\",\"title\":\"SearchCard_title__2wgdK\",\"vote\":\"SearchCard_vote__1y1FK\",\"high\":\"SearchCard_high__1RH35\",\"date\":\"SearchCard_date__P7Uza\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Card_root__1H75O\",\"post\":\"Card_post__1qSUd\",\"title\":\"Card_title__11Qx3\",\"rate\":\"Card_rate__2DaFi\",\"high\":\"Card_high__6NkBD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"movies_root__WPbyr\",\"toolbar\":\"movies_toolbar__2SxAV\",\"spacer\":\"movies_spacer__1Bcfz\",\"link\":\"movies_link__1dMDo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SearchGuide_root__d_Omi\",\"arrow\":\"SearchGuide_arrow__3Du75\",\"large\":\"SearchGuide_large__1qEE0\",\"small\":\"SearchGuide_small__1ws3w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Toggle_root__2l-yp\",\"item\":\"Toggle_item__2nX-S\",\"active\":\"Toggle_active__2rm3b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MovieList_root__5OC5j\",\"item\":\"MovieList_item__KLnE_\",\"single-column\":\"MovieList_single-column__1nZ34\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SearchInput_root__ulOvK\",\"wrapper\":\"SearchInput_wrapper__1oyXA\",\"input\":\"SearchInput_input__DM7ef\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"Icon_icon__3AZ_2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Toolbar_root__1dC3l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggle\":\"List_toggle__2f2Bz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Search_input__3bsFb\"};","import { Action } from 'redux';\n\nexport enum MovieType {\n  popular = 'popular',\n  nowPlaying = 'nowPlaying',\n  topRated = 'topRated',\n  upcoming = 'upcoming',\n  searchMovie = 'searchMovie'\n}\n\nexport interface UiState {\n  selectedMovieType: MovieType;\n  searchLinkVisible: boolean;\n  closeLinkVisible: boolean;\n}\n\nexport type UiActionType = string;\n\nexport interface UiAction extends Action<UiActionType> {\n  selectedType?: MovieType;\n  searchLinkVisible?: boolean;\n  closeLinkVisible?: boolean;\n}\n","import { PaginationActionType, PaginationAction, PaginationPaylod } from './types';\nimport { MovieType } from '../ui/types';\n\nexport function getFetchPaginationStartType(type: MovieType): PaginationActionType {\n  return `fetch-${type}-pagination-start`;\n}\n\nexport function getFetchPaginationSuccessType(type: MovieType): PaginationActionType {\n  return `fetch-${type}-pagination-success`;\n}\n\nexport function getFetchPaginationFailureType(type: MovieType): PaginationActionType {\n  return `fetch-${type}-pagination-failure`;\n}\n\nexport function getResetType(type: MovieType): PaginationActionType {\n  return `reset-${type}-pagination`;\n}\n\nexport function getFetchPaginationCancellationType(type: MovieType): PaginationActionType {\n  return `fetch-${type}-pagination-cancellation`;\n}\n\nexport function fetchPaginationStart(type: MovieType, page = 1): PaginationAction {\n  return {\n    type: getFetchPaginationStartType(type),\n    movieType: type,\n    page\n  };\n}\n\nexport function queryPaginationStart(query: string, page = 1): PaginationAction {\n  return {\n    type: getFetchPaginationStartType(MovieType.searchMovie),\n    movieType: MovieType.searchMovie,\n    query,\n    page\n  };\n}\n\nexport function fetchPaginationSuccess(\n  type: MovieType,\n  payload: PaginationPaylod\n): PaginationAction {\n  return {\n    type: getFetchPaginationSuccessType(type),\n    movieType: type,\n    payload\n  };\n}\n\nexport function fetchPaginationFailure(type: MovieType): PaginationAction {\n  return {\n    type: getFetchPaginationFailureType(type),\n    movieType: type\n  };\n}\n\nexport function fetchPaginationCancellation(type: MovieType): PaginationAction {\n  return {\n    type: getFetchPaginationCancellationType(type),\n    movieType: type\n  };\n}\n\nexport function resetPagination(type: MovieType): PaginationAction {\n  return {\n    type: getResetType(type),\n    movieType: type\n  };\n}\n","import { combineReducers, Reducer } from 'redux';\nimport { EntityState } from './types';\nimport { PaginationAction, Movie } from '../pagination/types';\nimport { getFetchPaginationSuccessType } from '../pagination/actions';\n\nconst entities = combineReducers({\n  movies: createEntities<Movie>('movies')\n});\n\nexport default entities;\n\nfunction createEntities<T>(name: string): Reducer<EntityState<T>, PaginationAction> {\n  return (state = {}, action) => {\n    switch (action.type) {\n      case getFetchPaginationSuccessType(action.movieType):\n        return { ...state, ...(action.payload!.entities as any)[name] };\n      default:\n        return state;\n    }\n  };\n}\n","import { combineReducers, Reducer } from 'redux';\nimport { PaginationState, PaginationAction } from './types';\nimport { MovieType } from '../ui/types';\nimport {\n  getFetchPaginationSuccessType,\n  getResetType,\n  getFetchPaginationStartType,\n  getFetchPaginationFailureType,\n  getFetchPaginationCancellationType\n} from './actions';\n\nconst pagination = combineReducers({\n  popular: createPagination(MovieType.popular),\n  nowPlaying: createPagination(MovieType.nowPlaying),\n  upcoming: createPagination(MovieType.upcoming),\n  topRated: createPagination(MovieType.topRated),\n  searchMovie: createPagination(MovieType.searchMovie)\n});\n\nexport default pagination;\n\nfunction createPagination(type: MovieType): Reducer<PaginationState, PaginationAction> {\n  const initialState: PaginationState = {\n    page: 0,\n    ids: [],\n    loading: false\n  };\n\n  return (state = initialState, action) => {\n    switch (action.type) {\n      case getFetchPaginationStartType(type):\n        return { ...state, loading: true };\n      case getFetchPaginationFailureType(type):\n        return { ...state, loading: false };\n      case getFetchPaginationSuccessType(type):\n        const ids = state.ids.concat(action.payload?.result.ids || []);\n        return { ...state, ...action.payload?.result, ids };\n      case getFetchPaginationCancellationType(type):\n        return { ...state, loading: false };\n      case getResetType(type):\n        return initialState;\n      default:\n        return state;\n    }\n  };\n}\n","import { MovieType, UiAction } from './types';\n\nexport const SELECT_MOVIE_TYPE = 'select-movie-type';\nexport const SET_SEARCH_LINK_VISIBLE = 'set-search-link-visible';\nexport const SET_CLOSE_LINK_VISIBLE = 'set-close-link-visible';\n\nexport function selectMovieType(movieType: MovieType): UiAction {\n  return {\n    type: SELECT_MOVIE_TYPE,\n    selectedType: movieType\n  };\n}\n\nexport function setSearchLinkVisible(visible: boolean) {\n  return {\n    type: SET_SEARCH_LINK_VISIBLE,\n    searchLinkVisible: visible\n  };\n}\n\nexport function setCloseLinkVisible(visible: boolean) {\n  return {\n    type: SET_CLOSE_LINK_VISIBLE,\n    closeLinkVisible: visible\n  };\n}\n","import { Reducer } from 'redux';\nimport { UiState, MovieType, UiAction } from './types';\nimport { SELECT_MOVIE_TYPE, SET_SEARCH_LINK_VISIBLE, SET_CLOSE_LINK_VISIBLE } from './actions';\n\nconst initialState: UiState = {\n  selectedMovieType: MovieType.popular,\n  searchLinkVisible: true,\n  closeLinkVisible: false\n};\n\nconst ui: Reducer<UiState, UiAction> = (state = initialState, action) => {\n  switch (action.type) {\n    case SELECT_MOVIE_TYPE:\n      return { ...state, selectedMovieType: action.selectedType! };\n    case SET_SEARCH_LINK_VISIBLE:\n      return { ...state, searchLinkVisible: action.searchLinkVisible! };\n    case SET_CLOSE_LINK_VISIBLE:\n      return { ...state, closeLinkVisible: action.closeLinkVisible! };\n    default:\n      return state;\n  }\n};\n\nexport default ui;\n","import { combineReducers } from 'redux';\nimport entities from './entities/reducers';\nimport pagination from './pagination/reducers';\nimport ui from './ui/reducers';\n\nconst rootReducer = combineReducers({ entities, pagination, ui });\n\nexport default rootReducer;\n\nexport type State = ReturnType<typeof rootReducer>;\n","import { Epic } from 'redux-observable';\nimport { of } from 'rxjs';\nimport { ajax } from 'rxjs/ajax';\nimport { filter, catchError, takeUntil, map, mergeMap } from 'rxjs/operators';\nimport { normalize, schema } from 'normalizr';\nimport { State } from '../rootReducer';\nimport { PaginationAction, Movie } from '../pagination/types';\nimport {\n  getFetchPaginationStartType,\n  fetchPaginationFailure,\n  fetchPaginationSuccess,\n  getFetchPaginationCancellationType\n} from '../pagination/actions';\nimport { EntityState } from '../entities/types';\n\nconst movieSchema = { results: [new schema.Entity('movies')] };\n\nexport const fetchMovies: Epic<PaginationAction, any, State> = action$ =>\n  action$.pipe(\n    filter(action => action.type === getFetchPaginationStartType(action.movieType)),\n    mergeMap(action =>\n      ajax(action.url!).pipe(\n        map(res => {\n          const resolvedData = normalize(res.response, movieSchema);\n\n          return fetchPaginationSuccess(action.movieType, {\n            result: {\n              page: resolvedData.result.page,\n              ids: resolvedData.result.results,\n              loading: false,\n              totalPages: resolvedData.result.total_pages,\n              totalResults: resolvedData.result.total_results\n            },\n            entities: resolvedData.entities as { movies: EntityState<Movie> }\n          });\n        }),\n        takeUntil(\n          action$.pipe(\n            filter(action => action.type === getFetchPaginationCancellationType(action.movieType))\n          )\n        ),\n        catchError(() => of(fetchPaginationFailure(action.movieType)))\n      )\n    )\n  );\n","import { combineEpics } from 'redux-observable';\nimport { fetchMovies } from './pagination/epics';\nimport { catchError } from 'rxjs/operators';\n\nconst rootEpic = (action$: any, store$: any, dependencies: any) =>\n  combineEpics(fetchMovies)(action$, store$, dependencies).pipe(\n    catchError((error, source) => {\n      console.error(error);\n      return source;\n    })\n  );\n\nexport default rootEpic;\n","import { Middleware } from 'redux';\nimport { getFetchPaginationStartType } from './actions';\nimport { MovieType } from '../ui/types';\nimport { State } from '../rootReducer';\n\nconst urls = {\n  [MovieType.popular]: '/movie/popular',\n  [MovieType.nowPlaying]: '/movie/now_playing',\n  [MovieType.topRated]: '/movie/top_rated',\n  [MovieType.upcoming]: '/movie/upcoming',\n  [MovieType.searchMovie]: '/search/movie'\n};\n\nconst fetchMoviesUrlMiddleware: Middleware<any, State> = () => next => action => {\n  if (action.movieType && getFetchPaginationStartType(action.movieType) === action.type) {\n    if (action.movieType === MovieType.searchMovie) {\n      action.url = `https://api.themoviedb.org/3${urls[action.movieType as MovieType]}?page=${\n        action.page\n      }&query=${encodeURIComponent(action.query)}&api_key=1329f6fe0ea9aee966eade5d2d5da1d4`;\n    } else {\n      action.url = `https://api.themoviedb.org/3${urls[action.movieType as MovieType]}?page=${\n        action.page\n      }&api_key=1329f6fe0ea9aee966eade5d2d5da1d4`;\n    }\n  }\n  return next(action);\n};\n\nexport default fetchMoviesUrlMiddleware;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport { createEpicMiddleware } from 'redux-observable';\nimport rootReducer from './rootReducer';\nimport rootEpic from './rootEpic';\nimport fetchMoviesUrlMiddleware from './pagination/fetchMoviesUrlMiddleware';\n\nconst epicMiddleware = createEpicMiddleware();\n\nexport default function configureStore(preloadedState?: any) {\n  const middlewares = [fetchMoviesUrlMiddleware, epicMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n  //   const enhancers = [middlewareEnhancer, monitorReducersEnhancer];\n  //   const composedEnhancers = composeWithDevTools(...enhancers);\n  const composedEnhancers = composeWithDevTools(middlewareEnhancer);\n  const store = createStore(rootReducer, preloadedState, composedEnhancers);\n\n  epicMiddleware.run(rootEpic);\n\n  if (process.env.NODE_ENV !== 'production' && module.hot) {\n    module.hot.accept('./rootReducer', () => store.replaceReducer(rootReducer));\n  }\n\n  return store;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport styles from './Toolbar.module.scss';\n\nexport interface ToolbarProps {\n  className?: string;\n}\n\nconst Toolbar: React.FC<ToolbarProps> = ({ children, className }) => {\n  return (\n    <div className={classNames(styles.root, className)}>\n      <img\n        src=\"https://www.themoviedb.org/assets/2/v4/logos/208x226-stacked-green-9484383bd9853615c113f020def5cbe27f6d08a84ff834f41371f223ebad4a3c.png\"\n        height=\"26\"\n        alt=\"icon\"\n      />\n      {children}\n    </div>\n  );\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport styles from './Icon.module.scss';\n\nexport interface IconProps {\n  type: 'search' | 'close';\n}\n\nconst CloseIcon = (\n  <svg\n    className={styles.icon}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n  </svg>\n);\n\nconst SearchIcon = (\n  <svg\n    className={styles.icon}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n  </svg>\n);\n\nconst Icon: React.FC<IconProps> = ({ type }) => {\n  switch (type) {\n    case 'close':\n      return CloseIcon;\n    case 'search':\n      return SearchIcon;\n    default:\n      return CloseIcon;\n  }\n};\n\nexport default Icon;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { MovieType } from '../../store/ui/types';\nimport styles from './Toggle.module.scss';\n\nconst toggleMap = {\n  [MovieType.popular]: { label: 'Popular', link: '/rmovie/popular' },\n  [MovieType.nowPlaying]: {\n    label: 'Now Playing',\n    link: '/rmovie/now-playing'\n  },\n  [MovieType.topRated]: {\n    label: 'Top Rated',\n    link: '/rmovie/top-rated'\n  },\n  [MovieType.upcoming]: { label: 'Upcoming', link: '/rmovie/upcoming' }\n};\n\nexport interface ToggleProps {\n  className?: string;\n}\n\nconst Toggle: React.FC<ToggleProps> = ({ className }) => (\n  <nav className={classNames(styles.root, className)}>\n    {Object.values(toggleMap).map(toggleItem => (\n      <NavLink\n        to={toggleItem.link}\n        className={styles.item}\n        activeClassName={styles.active}\n        key={toggleItem.label}\n      >\n        {toggleItem.label}\n      </NavLink>\n    ))}\n  </nav>\n);\n\nexport default Toggle;\n","import React from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport classNames from 'classnames';\nimport { Movie } from '../../store/pagination/types';\nimport styles from './MovieList.module.scss';\n\nexport interface MovieListProps {\n  list: Movie[];\n  item: (movie: Movie) => React.ReactNode;\n  hasMore: boolean;\n  onNext: () => any;\n  singleColumn?: boolean;\n}\n\nconst MovieList: React.FC<MovieListProps> = ({ list, item, hasMore, onNext, singleColumn }) => (\n  <InfiniteScroll\n    scrollThreshold={0.9}\n    dataLength={list.length}\n    loader=\"\"\n    next={onNext}\n    hasMore={hasMore}\n    className={styles.root}\n  >\n    {list.map(movie => (\n      <div\n        key={movie.id}\n        className={classNames(styles.item, { [styles['single-column']]: singleColumn })}\n      >\n        {item(movie)}\n      </div>\n    ))}\n  </InfiniteScroll>\n);\n\nexport default MovieList;\n","import React from 'react';\n\nexport interface TmdbConfig {\n  apiEndPoint: string;\n  imageBaseUrl: string;\n  backdropSize: string;\n  logoSize: string;\n  posterSize: string;\n  profileSize: string;\n  stillSize: string;\n  apiKey: string;\n}\n\nexport const defaultConfig: TmdbConfig = {\n  apiEndPoint: 'https://api.themoviedb.org/3',\n  imageBaseUrl: 'https://image.tmdb.org/t/p/',\n  backdropSize: 'w780',\n  logoSize: 'w300',\n  posterSize: 'w300',\n  profileSize: 'w185',\n  stillSize: 'w300',\n  apiKey: '1329f6fe0ea9aee966eade5d2d5da1d4'\n};\n\nconst TmdbConfigContext = React.createContext<TmdbConfig>(null as any);\n\nexport default TmdbConfigContext;\n","import React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport { Movie } from '../../store/pagination/types';\nimport TmdbConfigContext, { TmdbConfig } from '../../config/TmdbConfigContext';\nimport styles from './Card.module.scss';\n\nexport interface CardProps {\n  movie: Movie;\n}\n\nconst Card: React.FC<CardProps> = ({ movie }) => {\n  const config = useContext(TmdbConfigContext);\n\n  return (\n    <div className={styles.root}>\n      <div className={classNames(styles.rate, { [styles.high]: movie.vote_average! > 7 })}>\n        {movie?.vote_average}\n      </div>\n      <img className={styles.post} src={getPosterPath(movie, config)} alt=\"movie poster\" />\n      <p className={styles.title}>{movie.title}</p>\n    </div>\n  );\n};\n\nexport default Card;\n\nexport const CardWithMemo = React.memo(Card);\n\nfunction getPosterPath(movie: Movie, config: TmdbConfig) {\n  if (movie) {\n    return config.imageBaseUrl + config.posterSize + movie.poster_path;\n  } else {\n    return '';\n  }\n}\n","import { createSelector } from 'reselect';\nimport { State } from '../rootReducer';\nimport { MovieId, Movie, PaginationState } from './types';\nimport { EntityState } from '../entities/types';\nimport { MovieType } from '../ui/types';\n\nexport const getSelectedTypeMovies = createSelector<\n  State,\n  MovieType,\n  MovieId[],\n  EntityState<Movie>,\n  Movie[]\n>(\n  (state, type) => state.pagination[type || state.ui.selectedMovieType].ids,\n  state => state.entities.movies,\n  (ids, movieEntity) => ids.map(id => movieEntity[id!])\n);\n\nexport function hasMoreMovies(pagination: PaginationState) {\n  return pagination.totalPages == null ? true : pagination.page < pagination.totalPages;\n}\n","import React, { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Toggle from './components/Toggle';\nimport MovieList from './components/MovieList';\nimport { CardWithMemo } from './components/Card';\nimport { setSearchLinkVisible, setCloseLinkVisible } from '../store/ui/actions';\nimport { State } from '../store/rootReducer';\nimport { PaginationState, Movie } from '../store/pagination/types';\nimport { MovieType } from '../store/ui/types';\nimport { fetchPaginationStart } from '../store/pagination/actions';\nimport { getSelectedTypeMovies, hasMoreMovies } from '../store/pagination/selector';\nimport styles from './List.module.scss';\n\nexport interface ListProps {\n  type: MovieType;\n}\n\nconst List: React.FC<ListProps> = ({ type }) => {\n  const pagination = useSelector<State, PaginationState>(state => state.pagination[type]);\n  const selectedMovies = useSelector<State, Movie[]>(state => getSelectedTypeMovies(state, type));\n  const hasMore = hasMoreMovies(pagination);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setSearchLinkVisible(true));\n    dispatch(setCloseLinkVisible(false));\n  }, [dispatch]);\n\n  useEffect(() => {\n    const { page, loading } = pagination;\n\n    if (page === 0 && !loading) {\n      dispatch(fetchPaginationStart(type, 1));\n    }\n  }, [dispatch, type, pagination]);\n\n  const handleScroll = useCallback(() => {\n    const { page, loading } = pagination;\n    const hasMore = hasMoreMovies(pagination);\n\n    if (!loading && hasMore) {\n      dispatch(fetchPaginationStart(type, page + 1));\n    }\n  }, [dispatch, type, pagination]);\n\n  return (\n    <>\n      <Toggle className={styles.toggle} />\n      <MovieList\n        list={selectedMovies}\n        onNext={handleScroll}\n        hasMore={hasMore}\n        item={movie => <CardWithMemo movie={movie} />}\n      />\n    </>\n  );\n};\n\nexport default List;\n","import React, { useCallback, FormEvent } from 'react';\nimport classNames from 'classnames';\nimport styles from './SearchInput.module.scss';\n\nexport interface SearchInputProps {\n  onInput: (value: string) => void;\n  className?: string;\n}\n\nconst SearchInput: React.FC<SearchInputProps> = ({ onInput, className }) => {\n  const handleInput = useCallback(\n    (event: FormEvent<HTMLInputElement>) => {\n      onInput((event.target as any).value);\n    },\n    [onInput]\n  );\n\n  return (\n    <div className={classNames(styles.root, className)}>\n      <label className={styles.wrapper}>\n        <svg width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n            <path d=\"M14.5 14.5l-3.72-3.72\" />\n            <circle cx=\"6.67\" cy=\"6.67\" r=\"5.33\" />\n          </g>\n        </svg>\n        <input\n          onInput={handleInput}\n          className={styles.input}\n          type=\"search\"\n          placeholder=\"Search movies...\"\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default SearchInput;\n","import React from 'react';\nimport styles from './SearchGuide.module.scss';\n\nconst SearchGuide: React.FC = () => {\n  return (\n    <div className={styles.root}>\n      <h1 className={styles.arrow}>\n        <span role=\"img\" aria-label=\"look up\">\n          ☝️\n        </span>\n      </h1>\n      <p className={styles.large}>Search for movies</p>\n      <p className={styles.small}>use the search bar above</p>\n    </div>\n  );\n};\n\nexport default SearchGuide;\n","import React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport { Movie } from '../../store/pagination/types';\nimport TmdbConfigContext, { TmdbConfig } from '../../config/TmdbConfigContext';\nimport styles from './SearchCard.module.scss';\n\nexport interface SearchCardProps {\n  movie: Movie;\n}\n\nconst SearchCard: React.FC<SearchCardProps> = ({ movie }) => {\n  const config = useContext(TmdbConfigContext);\n\n  return (\n    <div className={styles.root}>\n      <img className={styles.post} src={getPosterPath(movie, config)} alt=\"poster\" />\n      <div className={styles.detail}>\n        <div className={styles.title}>{movie.title}</div>\n        <div>\n          <span\n            className={classNames(styles.vote, { [styles.hign]: (movie?.vote_average || 0) > 7 })}\n          >\n            {movie.vote_average} User Score\n          </span>\n          <span className=\"date\">{movie.release_date}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchCard;\n\nexport const SearchCardWithMemo = React.memo(SearchCard);\n\nfunction getPosterPath(movie: Movie, config: TmdbConfig) {\n  if (movie) {\n    return config.imageBaseUrl + config.posterSize + movie.poster_path;\n  } else {\n    return '';\n  }\n}\n","import React, { useEffect, useCallback, useMemo, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, debounceTime, tap } from 'rxjs/operators';\nimport { setSearchLinkVisible, setCloseLinkVisible } from '../store/ui/actions';\nimport SearchInput from './components/SearchInput';\nimport SearchGuide from './components/SearchGuide';\nimport {\n  resetPagination,\n  fetchPaginationCancellation,\n  queryPaginationStart\n} from '../store/pagination/actions';\nimport { MovieType } from '../store/ui/types';\nimport { State } from '../store/rootReducer';\nimport { PaginationState, Movie } from '../store/pagination/types';\nimport { getSelectedTypeMovies, hasMoreMovies } from '../store/pagination/selector';\nimport MovieList from './components/MovieList';\nimport { SearchCardWithMemo } from './components/SearchCard';\nimport styles from './Search.module.scss';\n\nconst Search: React.FC = () => {\n  const pagination = useSelector<State, PaginationState>(\n    state => state.pagination[MovieType.searchMovie]\n  );\n  const selectedMovies = useSelector<State, Movie[]>(state =>\n    getSelectedTypeMovies(state, MovieType.searchMovie)\n  );\n  const hasMore = hasMoreMovies(pagination);\n\n  const dispatch = useDispatch();\n  const inputSubject = useMemo(() => new Subject<string>(), []);\n  const [guideVisible, showGuide] = useState(true);\n  const queryRef = useRef('');\n\n  const reset = useCallback(() => {\n    dispatch(fetchPaginationCancellation(MovieType.searchMovie));\n    dispatch(resetPagination(MovieType.searchMovie));\n  }, [dispatch]);\n  const search = useCallback(\n    (query: string, page = 1) => {\n      reset();\n      queryRef.current = query;\n      if (query) {\n        dispatch(queryPaginationStart(query, page));\n      }\n    },\n    [dispatch, reset]\n  );\n  const handleScroll = useCallback(() => {\n    const { page, loading } = pagination;\n    const hasMore = hasMoreMovies(pagination);\n\n    if (!loading && hasMore) {\n      dispatch(queryPaginationStart(queryRef.current, page + 1));\n    }\n  }, [dispatch, pagination]);\n\n  const subscription = useMemo(\n    () =>\n      inputSubject\n        .asObservable()\n        .pipe(\n          tap(v => {\n            if (v) {\n              showGuide(false);\n            } else {\n              showGuide(true);\n              reset();\n            }\n          }),\n          debounceTime(600),\n          distinctUntilChanged()\n        )\n        .subscribe(search),\n    [inputSubject, showGuide, reset, search]\n  );\n\n  const handleInput = useCallback(\n    (val: string) => {\n      inputSubject.next(val);\n    },\n    [inputSubject]\n  );\n\n  useEffect(() => {\n    dispatch(setSearchLinkVisible(false));\n    dispatch(setCloseLinkVisible(true));\n\n    return () => {\n      subscription.unsubscribe();\n      inputSubject.complete();\n      reset();\n    };\n  }, [dispatch, inputSubject, subscription, reset]);\n\n  return (\n    <>\n      <SearchInput onInput={handleInput} className={styles.input} />\n      {guideVisible ? (\n        <SearchGuide />\n      ) : (\n        <MovieList\n          singleColumn\n          item={movie => <SearchCardWithMemo movie={movie} />}\n          onNext={handleScroll}\n          hasMore={hasMore}\n          list={selectedMovies}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Search;\n","import React from 'react';\nimport { RouteComponentProps, Link, Switch, Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport Toolbar from './components/Toolbar';\nimport Icon from './components/Icon';\nimport { State } from '../store/rootReducer';\nimport List from './List';\nimport Search from './Search';\nimport { MovieType } from '../store/ui/types';\nimport styles from './index.module.scss';\n\nconst Home: React.FC<RouteComponentProps> = ({ match }) => {\n  const searchLinkVisible = useSelector<State>(state => state.ui.searchLinkVisible);\n  const closeLinkVisible = useSelector<State>(state => state.ui.closeLinkVisible);\n\n  return (\n    <div className={styles.root}>\n      <Toolbar className={styles.toolbar}>\n        <span className={styles.spacer}></span>\n        {searchLinkVisible && (\n          <Link to={`${match.url}/search`} className={styles.link}>\n            <Icon type=\"search\" />\n          </Link>\n        )}\n        {closeLinkVisible && (\n          <Link to={`${match.url}/`} className={styles.link}>\n            <Icon type=\"close\" />\n          </Link>\n        )}\n      </Toolbar>\n      <Switch>\n        <Route path={`${match.url}/popular`}>\n          <List type={MovieType.popular} />\n        </Route>\n        <Route path={`${match.url}/now-playing`}>\n          <List type={MovieType.nowPlaying} />\n        </Route>\n        <Route path={`${match.url}/top-rated`}>\n          <List type={MovieType.topRated} />\n        </Route>\n        <Route path={`${match.url}/upcoming`}>\n          <List type={MovieType.upcoming} />\n        </Route>\n        <Route path={`${match.url}/search`}>\n          <Search />\n        </Route>\n        <Redirect to={`${match.url}/popular`} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Switch, Route, RouteComponentProps, Redirect } from 'react-router-dom';\nimport Movies from './movies';\nimport './App.scss';\n\nconst App: React.FC<RouteComponentProps> = ({ match }) => {\n  return (\n    <Switch>\n      <Route path={`${match.url}rmovie`} component={Movies} />\n      <Redirect to={`${match.url}rmovie`} exact />\n    </Switch>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport configureStore from './store/configureStore';\nimport './index.scss';\nimport App from './App';\nimport TmdbConfigContext, { defaultConfig } from './config/TmdbConfigContext';\n// import * as serviceWorker from './serviceWorker';\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <TmdbConfigContext.Provider value={defaultConfig}>\n      <Router>\n        <Route path=\"/\" component={App} />\n      </Router>\n    </TmdbConfigContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}